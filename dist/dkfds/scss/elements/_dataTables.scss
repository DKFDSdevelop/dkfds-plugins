
table.dataTable {

    th:focus,td:focus{
        outline: $focus-outline;
        outline-offset: 0;
    }

    thead{
        //padding
        th{
            padding: calc(#{map-get($spacers, 4)} - 1px);
            border-bottom: inherit;
        }

        //Sorting
        .sorting,
        .sorting_asc,
        .sorting_desc,
        .sorting_asc_disabled,
        .sorting_desc_disabled {
            cursor: pointer;
            *cursor: hand;
            background-image: none;
            position: relative;
            padding-right: 32px; //make room for icon

            &:after {
                content: '';
                position: absolute;
                height: 24px;
                width: 24px;
                background-repeat: no-repeat;
                background-position: center -1px;
            }
        }
        .sorting {
            &:after {
                background-image: url('#{$icons-folder-path}/sort-none.svg');  //sort_both
                opacity: .75;
            }
        }
        .sorting_asc {
            &:after {
                background-image: url('#{$icons-folder-path}/sort-acending.svg'); //sort_asc
            }
            //background-image: url('../images/.png');
        }
        .sorting_desc {
            &:after {
                background-image: url('#{$icons-folder-path}/sort-descending.svg'); //sort_desc
            }
        }
        .sorting_asc_disabled {
            &:after {
                background-image: url('#{$icons-folder-path}/sort-acending.svg'); //sort_asc -> disabled
            }
        }
        .sorting_desc_disabled {
            &:after {
                background-image: url('#{$icons-folder-path}/sort-descending.svg'); //sort_desc -> disabled
            }
        }
    }

    tbody{
        td, th{
            padding: calc(#{map-get($spacers, 4)} - 1px);
        }

        //Expanded row
        tr.child{
            padding: calc(#{map-get($spacers, 4)} - 1px); 
            td:first-child{
                box-shadow: inset 2px 0 0 0 #454545;
            }

             //Responsive details list
            ul.dtr-details{
                @include unstyled-list;
                li:last-child{
                    padding-bottom: 0;
                }
            }
        }

        //Selected row
        tr.selected-row{
            background-color: $color-gray-light !important;
            & + tr.child{ //child row (the expanded row) should have same color as parent. 
                background-color: $color-gray-light !important;
            }
        }
        //Expanded row inner content
        .details-row-content {
            padding-right: 32px;
            padding-left: 54px;
            padding-top: map-get($spacers, 4);
            padding-bottom: map-get($spacers, 4);
        }
        .details-control{
            cursor: pointer;
            &:after{
                //plus icon
                content: "";
                background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z' /%3E%3C/svg%3E");
                width: 24px;
                height: 24px;
                display: block;
            }
        }
        //column with edit/delete overflow
        .row-control{
            text-align: right;
            padding: 7px;
        }
        tr.shown {
            > td {
                border-bottom-color:$color-gray-pale;
            }

            .details-control {
                box-shadow: inset 2px 0 0px 0px $color-gray-dark;
                &:after{
                    //minus icon
                    content: "";
                    background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M19,13H5V11H19V13Z' /%3E%3C/svg%3E");
                    width: 24px;
                    height: 24px;
                    display: block;
                }
            }
        }
    }



    //Selectable row checkboxes
    [type=checkbox]+label:before, [type=radio]+label:before{
        box-sizing: border-box; //datatables uses content-box instead
    }

    //Responsive collapsed (plus icon)
    &.dtr-inline.collapsed>tbody>tr[role="row"]>td:first-child, &.dtr-inline.collapsed>tbody>tr[role="row"]>th:first-child{
        &:before{
            background-image: url('#{$icons-folder-path}/plus.svg');
            height: 24px;
            width: 24px;
            background-color: transparent;
            box-shadow: none;
            border: none;
            content: '';
            top: 14px;
        }
    }
    //Responsive expanded (minus icon)
    &.dtr-inline.collapsed>tbody>tr.parent>td, &.dtr-inline.collapsed>tbody>tr.parent>th{
        border-bottom: none;
        &:first-child{
            box-shadow: inset 2px 0 0 0 #454545;
        }
        &:before{
            background-image: url('#{$icons-folder-path}/minus.svg') !important;
        }
    }

    &.no-footer{
        border-bottom: $outer-border;
    }

    //fix styling for zebra-rows on datatables (because of responsive expandable row). 
    &.table--zebra{
        tr.odd{
            background-color: #fff;
            & + tr.child{ //child row (the expanded row) should have same color as parent. 
                background-color: #fff;
            }
        }
        tr.even{
            background-color: $color-gray-pale;
            & + tr.child{ //child row (the expanded row) should have same color as parent. 
                background-color: $color-gray-pale;
                &:hover{
                    background-color: $color-gray-pale !important; //overwrite hover styling
                }
            }
        }
    }
    .overflow-menu{
        .overflow-list{
            li{
                display: flex;
            }
        }
    }
}

//Pagination button
.dataTables_wrapper .dataTables_paginate .paginate_button{
    padding: map-get($spacers, 3) map-get($spacers, 4);
    margin-left: 4px;
    &:hover{
        color: $color-text !important;
        border-color: $color-gray-pale;
        background: $color-gray-pale;
    }
    &.current, &.current:hover{
        color: $color-text !important;
        border: $outer-border;
        background: $color-gray-pale;
    }
}

//Show x entries
.dataTables_length {
    margin-bottom: map-get($spacers, 4);
    white-space: nowrap;
    label{
        display: flex;
        align-items: center;
    }
    select{
        margin-left: map-get($spacers, 3);
        margin-right: map-get($spacers, 3);
        background-color: $color-white;
        border: $outer-border;
        border-radius: $input-border-radius;
        color: $color-black; // standardize on firefox
        font-size: $input-font-size;
        line-height: $input-line-height;
        height: $input-standard-height; //fixes bug in chrome where line-height is not respected.
        width: inherit;
    }
}

// Filtering input
.dataTables_filter{
    display: flex;
    margin-bottom: map-get($spacers, 4);
    button{ //utiltiy button next to search
        width: inherit;
    }
    label{
        display: flex;
        white-space: nowrap;
        align-items: center;
    }
    input[type=search] {
        border: $outer-border;
        border-radius: $input-border-radius;
        color: $color-black; // standardize on firefox
        font-size: $input-font-size;
        line-height: $input-line-height;
        padding: $input-top-bottom-padding $input-left-right-padding;
    }
}